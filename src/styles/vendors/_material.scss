@use 'variables' as var;
@use './material-theme' as customTheme;

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the theme object.
$paths-tool-angular-theme: customTheme.$light-theme;

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($paths-tool-angular-theme);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($paths-tool-angular-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($paths-tool-angular-theme);
/* You can add global styles to this file, and also import other style files */

.mat-button-primary {
  @include mat.button-color($paths-tool-angular-theme, $color-variant: primary);
}

.mat-button-secondary {
  @include mat.button-color($paths-tool-angular-theme, $color-variant: secondary);
}

.mat-button-error {
  @include mat.button-color($paths-tool-angular-theme, $color-variant: error);
}
